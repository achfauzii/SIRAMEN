// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RasManagement.Models;

#nullable disable

namespace RasManagement.Migrations
{
    [DbContext(typeof(ProjectRasmanagementContext))]
    [Migration("20231130032043_add-column-ischangepassword-account")]
    partial class addcolumnischangepasswordaccount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RasManagement.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Birthplace")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndContract")
                        .HasColumnType("date")
                        .HasColumnName("End_contract");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Hiredstatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsChangePassword")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("date")
                        .HasColumnName("Join_date");

                    b.Property<string>("Maritalstatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Religion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Role_Id");

                    b.Property<DateTime?>("StartContract")
                        .HasColumnType("date")
                        .HasColumnName("Start_contract");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.AssetsManagement", b =>
                {
                    b.Property<int>("AssetsManagementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssetsManagement_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetsManagementId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<bool?>("Charger")
                        .HasColumnType("bit");

                    b.Property<string>("Display")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("GraphicCard")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Hdd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("HDD");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OperatingSystem")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Processor")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Ram")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("RAM");

                    b.Property<string>("Rfid")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("RFID");

                    b.Property<string>("Ssd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SSD");

                    b.HasKey("AssetsManagementId")
                        .HasName("PK__AssetsMa__1AD8D05B51F60BDA");

                    b.HasIndex("AccountId");

                    b.ToTable("AssetsManagement", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.Certificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Certificate_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PublicationYear")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Publication_year");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ValidUntil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Valid_until");

                    b.HasKey("CertificateId");

                    b.HasIndex("AccountId");

                    b.ToTable("Certificate", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.DataUniversita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NamaUniversitas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nama_universitas");

                    b.HasKey("Id")
                        .HasName("PK__Data_uni__3213E83F19FE3B0C");

                    b.ToTable("Data_universitas", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Dept_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"));

                    b.Property<string>("NamaDept")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Nama_Dept");

                    b.HasKey("DeptId");

                    b.HasIndex(new[] { "DeptId" }, "IX_Department");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.EmploymentHistory", b =>
                {
                    b.Property<int>("WorkExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Work_experience_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkExperienceId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("WorkExperienceId");

                    b.HasIndex("AccountId");

                    b.ToTable("Employment_History", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.FormalEdu", b =>
                {
                    b.Property<int>("FormalEduId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormalEdu_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormalEduId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Years")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("FormalEduId");

                    b.HasIndex("AccountId");

                    b.ToTable("Formal_Edu", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.LastModified", b =>
                {
                    b.Property<int>("LastModifiedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Last_Modified_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LastModifiedId"));

                    b.Property<string>("AccountId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<DateTime?>("LastModifiedShortList")
                        .HasColumnType("date")
                        .HasColumnName("LastModified_ShortList");

                    b.HasKey("LastModifiedId");

                    b.HasIndex("AccountId");

                    b.ToTable("Last_Modified", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.NonFormalEdu", b =>
                {
                    b.Property<int>("NonFormalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NonFormal_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NonFormalId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Organizer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Years")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("NonFormalId");

                    b.HasIndex("AccountId");

                    b.ToTable("NonFormal_Edu", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.NonRasCandidate", b =>
                {
                    b.Property<string>("NonRasId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NonRAS_Id");

                    b.Property<string>("Birthdate")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CurrentSalary")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Current_Salary");

                    b.Property<string>("CvBerca")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CV_Berca");

                    b.Property<string>("Domisili")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Education")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EnglishLevel")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("English_Level");

                    b.Property<string>("ExpectedSalary")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Expected_Salary");

                    b.Property<string>("ExperienceInYear")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Experience_In_Year");

                    b.Property<string>("FilteringBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Filtering_By");

                    b.Property<string>("FinancialIndustry")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Financial_Industry");

                    b.Property<string>("Fullname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IntwByRas")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("Intw_ByRAS");

                    b.Property<string>("IntwDateByRas")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IntwDate_ByRAS");

                    b.Property<string>("IntwDateUser")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("IntwDate_User");

                    b.Property<string>("IntwUser")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Intw_User");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("date")
                        .HasColumnName("Last_Modified");

                    b.Property<string>("Level")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LevelRekom")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("Level_Rekom");

                    b.Property<string>("NameOfUser")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("NameOf_User");

                    b.Property<string>("Negotiable")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Notes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NoticePeriode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Notice_Periode");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RawCv")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Raw_CV");

                    b.Property<string>("Skillset")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("University")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Work_Status");

                    b.HasKey("NonRasId");

                    b.ToTable("NonRAS_Candidate", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.OfferCandidate", b =>
                {
                    b.Property<int>("OfferCandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OfferCandidate_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferCandidateId"));

                    b.Property<DateTime?>("IntwDateUser")
                        .HasColumnType("date")
                        .HasColumnName("IntwDate_User");

                    b.Property<string>("IntwUser")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("Intw_User");

                    b.Property<string>("NameOfUser")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameOf_User");

                    b.Property<int?>("ShortlistId")
                        .HasColumnType("int")
                        .HasColumnName("Shortlist_Id");

                    b.HasKey("OfferCandidateId");

                    b.HasIndex("ShortlistId");

                    b.ToTable("Offer_Candidate", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.Placement", b =>
                {
                    b.Property<int>("PlacementStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Placement_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlacementStatusId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_name");

                    b.Property<string>("Description")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("varchar(225)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("JobRole")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlacementStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Placement_status");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("PlacementStatusId");

                    b.HasIndex("AccountId");

                    b.ToTable("Placement", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.ProjectHistory", b =>
                {
                    b.Property<int>("ProjectHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Project_history_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectHistoryId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Company_name");

                    b.Property<string>("JobSpec")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Job_spec");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Project_name");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("ProjectHistoryId");

                    b.HasIndex("AccountId");

                    b.ToTable("Project_History", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.Qualification", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Qualification_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualificationId"));

                    b.Property<string>("AccountId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("Database")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Framework")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Others")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProgrammingLanguage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Programming_language");

                    b.Property<string>("Tools")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("QualificationId");

                    b.HasIndex("AccountId");

                    b.ToTable("Qualification", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Role_Id");

                    b.Property<string>("Rolename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.ShortlistCandidate", b =>
                {
                    b.Property<int>("ShortlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Shortlist_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShortlistId"));

                    b.Property<string>("AccountId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<string>("CurrentSalary")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Current_Salary");

                    b.Property<string>("CvBerca")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CV_Berca");

                    b.Property<string>("Domisili")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EnglishLevel")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("English_Level");

                    b.Property<string>("ExpectedSalary")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Expected_Salary");

                    b.Property<int?>("ExperienceInYear")
                        .HasColumnType("int")
                        .HasColumnName("Experience_In_Year");

                    b.Property<string>("FilteringBy")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Filtering_By");

                    b.Property<string>("FinancialIndustry")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Financial_Industry");

                    b.Property<string>("IntwByRas")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("Intw_ByRAS");

                    b.Property<DateTime?>("IntwDateByRas")
                        .HasColumnType("date")
                        .HasColumnName("IntwDate_ByRAS");

                    b.Property<string>("Level")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LevelRekom")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("Level_Rekom");

                    b.Property<string>("Negotiable")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Notes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NoticePeriode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Notice_Periode");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RawCv")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Raw_CV");

                    b.Property<string>("WorkStatus")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Work_Status");

                    b.HasKey("ShortlistId");

                    b.HasIndex("AccountId");

                    b.ToTable("Shortlist_Candidate", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.TurnOver", b =>
                {
                    b.Property<int>("TurnOverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TurnOver_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnOverId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Account_Id");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("Dept_Id");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("date")
                        .HasColumnName("Exit_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TurnOverId");

                    b.HasIndex("AccountId");

                    b.HasIndex("DeptId");

                    b.ToTable("TurnOver", (string)null);
                });

            modelBuilder.Entity("RasManagement.Models.Account", b =>
                {
                    b.HasOne("RasManagement.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Account_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RasManagement.Models.AssetsManagement", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("AssetsManagements")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.Certificate", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("Certificates")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Certificate_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.EmploymentHistory", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("EmploymentHistories")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Employment_History_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.FormalEdu", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("FormalEdus")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Formal_Edu_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.LastModified", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("LastModifieds")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Last_Modified_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.NonFormalEdu", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("NonFormalEdus")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_NonFormal_Edu_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.OfferCandidate", b =>
                {
                    b.HasOne("RasManagement.Models.ShortlistCandidate", "Shortlist")
                        .WithMany("OfferCandidates")
                        .HasForeignKey("ShortlistId")
                        .HasConstraintName("FK_Offer_Candidate_Offer_Shortlist");

                    b.Navigation("Shortlist");
                });

            modelBuilder.Entity("RasManagement.Models.Placement", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("Placements")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Placement_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.ProjectHistory", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("ProjectHistories")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Project_History_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.Qualification", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("Qualifications")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Qualification_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.ShortlistCandidate", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("ShortlistCandidates")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Shortlist_Candidate_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RasManagement.Models.TurnOver", b =>
                {
                    b.HasOne("RasManagement.Models.Account", "Account")
                        .WithMany("TurnOvers")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_TurnOver_Account");

                    b.HasOne("RasManagement.Models.Department", "Dept")
                        .WithMany("TurnOvers")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_TurnOver_Department");

                    b.Navigation("Account");

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("RasManagement.Models.Account", b =>
                {
                    b.Navigation("AssetsManagements");

                    b.Navigation("Certificates");

                    b.Navigation("EmploymentHistories");

                    b.Navigation("FormalEdus");

                    b.Navigation("LastModifieds");

                    b.Navigation("NonFormalEdus");

                    b.Navigation("Placements");

                    b.Navigation("ProjectHistories");

                    b.Navigation("Qualifications");

                    b.Navigation("ShortlistCandidates");

                    b.Navigation("TurnOvers");
                });

            modelBuilder.Entity("RasManagement.Models.Department", b =>
                {
                    b.Navigation("TurnOvers");
                });

            modelBuilder.Entity("RasManagement.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("RasManagement.Models.ShortlistCandidate", b =>
                {
                    b.Navigation("OfferCandidates");
                });
#pragma warning restore 612, 618
        }
    }
}
