var table = null, softlColors = ["#B7E4C7", "#FFD8B1", "#C9C8E8", "#BCCEF8", "#AED9E0", "#F9E4AD", "#FFA69E", "#D0AEEF", "#B5DFE6", "#F6E4C8", "#c9a7eb", "#a4b0f5", "#D2E0FB", "#F7F5EB"], pastelColors = ["#B7E4C7", "#FFD8B1", "#C9C8E8", "#BCCEF8", "#AED9E0", "#F9E4AD", "#FFA69E", "#D0AEEF", "#B5DFE6", "#F6E4C8", "#c9a7eb", "#a4b0f5", "#D2E0FB", "#F7F5EB"]; $(document).ready(function () { SharedShortListCandidate("all"), fetchCategories() }); function SharedShortListCandidate(a) { $.fn.DataTable.isDataTable("#resource") && $("#resource").DataTable().destroy(), table = $("#resource").DataTable({ fixedColumns: { left: 2 }, scrollX: !0, processing: !0, serverSide: !0, lengthMenu: [5, 10, 50, 75, 100], pageLength: 10, order: [[0, "asc"]], ajax: { url: "https://localhost:7177/api/Shortlist/ShortListCandidate", type: "POST", contentType: "application/json", headers: { Authorization: "Bearer " + sessionStorage.getItem("Token") }, data: function (b) { return b.order = b.order[0], b.search.category = "all" == a ? "" : a, JSON.stringify(b) } }, columns: [{ data: "fullname" }, { data: "position", render: function (a) { if (null == a) { return "b" } for (var b = a.split(","), c = $("<div class=\"badge-container\"></div>"), d = 0; d < b.length; d++) { var e = b[d].trim(), f = getColorForPosition(e), g = $("<span class=\"badge badge-pill badge-pastel\">" + e + "</span>"); g.css("background-color", f), c.append(g), d < b.length - 1 && c.append(" ") } return c.html() } }, { data: "skillset", render: function (a) { if (null == a) { return "b" } for (var b = a.split(","), c = $("<div class=\"badge-container\"></div>"), d = 0; d < b.length; d++) { var e = b[d].trim(), f = getColorForWord(e), g = $("<span class=\"badge badge-pill badge-pastel\">" + e + "</span>"); g.css("background-color", f), c.append(g), d < b.length - 1 && c.append(" ") } return c.html() } }, { data: "levelRekom" }, { data: "level" }, { data: "education" }, { data: "ipk" }, { data: "university" }, { data: "domisili" }, { data: "birthdate", render: function (a) { if ("" === a) return ""; var b = Date.now(), c = new Date(a), d = b - c.getTime(), e = Math.ceil(d / 86400000), f = Math.floor(e / 365); return f + " tahun" } }, { data: "experienceInYear" }, { data: "workStatus", render: function (a) { return "true" === a ? a = "<span class=\"badge badge-pill badge-success\" style=\"outline: none; border:none\"  data - placement=\"right\" data - toggle=\"modal\" data - animation=\"false\">Active</span>" : a = "<span class=\"badge badge-pill badge-secondary\" style=\"outline: none; border:none\"  data - placement=\"right\" data - toggle=\"modal\" data - animation=\"false\">Inactive</span>" } }, { data: "noticePeriode" }, { data: "financialIndustry", render: function (a, b) { if ("display" === b || "filter" === b) { return "true" === a ? "<div class=\"text-center\"><i class=\"fas fa-check-circle\" style=\"color: #0ba80b;\"></i></div>" : "<div class=\"text-center\">" + "<i class=\"fas fa-times-circle\" style=\"color: #ee463a;\"></i>" + "</div>" } return a } }, { data: "cvBerca", render: function (a, b) { if ("display" === b || "filter" === b) { return "<a href =\"" + a + "\"> Cv Berca </a>" } return a } }], searching: !0 }) } function fetchCategories() { fetch("https://localhost:7177/api/Shortlist/Position", { method: "GET", headers: { "Content-Type": "application/json", Authorization: "Bearer " + sessionStorage.getItem("Token") } }).then(a => { if (!a.ok) throw new Error("Network response was not ok"); return a.json() }).then(a => { createNavigation(a.data) }).catch(a => { console.error("There has been a problem with your fetch operation:", a) }) } function createNavigation(a) { let b = 9; a.unshift("All"); const c = window.innerWidth || document.documentElement.clientWidth; 1024 >= c && (b = 7), 850 > c && (b = 6), 750 > c && (b = 5), 500 >= c && (b = 3); const d = document.createElement("ul"); d.className = "nav nav-tabs"; for (let c = 0; c < Math.min(a.length, b); c++) { const b = document.createElement("li"); b.className = "nav-item"; const e = document.createElement("a"); e.className = "nav-link text-sm", e.href = "#", e.setAttribute("data-category", a[c].toLowerCase()), e.textContent = capitalizeWords(a[c]), 0 == c && e.classList.add("active"), b.appendChild(e), d.appendChild(b), e.addEventListener("click", function (a) { a.preventDefault(); const b = this.getAttribute("data-category"); console.log("Selected category:", b), d.querySelectorAll(".nav-link").forEach(a => { a.classList.remove("active") }), this.classList.add("active"), SharedShortListCandidate(b) }) } const e = document.getElementById("filterNavigation"); if (a.length > b) { const c = createDropdown(a.slice(b)); d.appendChild(c), dropdownToggle = c.querySelector(".dropdown-toggle"), dropdownToggle.addEventListener("click", function () { const a = d.querySelectorAll(".nav-link"); a.forEach(a => { a.classList.remove("active") }), dropdownToggle.classList.add("active") }) } e.appendChild(d) } function createDropdown(a) { const b = document.createElement("li"); b.className = "nav-item dropdown ml-auto"; const c = document.createElement("a"); c.className = "nav-link dropdown-toggle", c.href = "#", c.setAttribute("id", "navbarDropdown"), c.setAttribute("role", "button"), c.setAttribute("data-toggle", "dropdown"), c.setAttribute("aria-haspopup", "true"), c.setAttribute("aria-expanded", "false"), c.textContent = "More"; const d = document.createElement("div"); return d.className = "dropdown-menu", d.setAttribute("aria-labelledby", "navbarDropdown"), a.forEach(a => { const b = document.createElement("a"); b.className = "dropdown-item", b.href = "#", b.textContent = capitalizeWords(a), b.addEventListener("click", function (a) { a.preventDefault(); const b = this.textContent; console.log("Selected category:", b), SharedShortListCandidate(b) }), d.appendChild(b) }), b.appendChild(c), b.appendChild(d), b } function capitalizeWords(a) { return a.toLowerCase().replace(/(?:^|\s)\S/g, function (b) { return b.toUpperCase() }) } function getRandomPastelColor() { var a = Math.floor(Math.random() * pastelColors.length); return pastelColors[a] } function getRandomSoftlColor() { var a = Math.floor(Math.random() * pastelColors.length); return pastelColors[a] } var colorsByWord = {}, colorByPosition = {}; function getColorForWord(a) { return colorsByWord.hasOwnProperty(a) || (colorsByWord[a] = pastelColors[Object.keys(colorsByWord).length % pastelColors.length]), colorsByWord[a] } function getColorForPosition(a) { return colorsByWord.hasOwnProperty(a) || (colorsByWord[a] = softlColors[Object.keys(colorsByWord).length % softlColors.length]), colorsByWord[a] }