@{
    ViewData["Title"] = "ManageAccounts";
    Layout = "~/Views/Layout/LayoutSuperAdmin.cshtml";
}

<h5 style="font-family:comfortaa; color: black" class="font-weight-bold">Manage Employee</h5>
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Employee Table</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTableAccounts" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Gender</th>
                        <th>Hired Status</th>
                        <th>Role</th>
                    </tr>
                </thead>

            </table>
        </div>
    </div>
</div>

@*Modal*@
<div class="modal fade" id="Modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Role</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="Role">Role</label>
                        <select id="Role" class="form-control" required>
                            <option disabled selected value="">Select a role for the account</option>
                            <option value="2">Admin</option>
                            <option value="3">Employee</option>

                        </select>
                        <span class="error-message-framework" style="color: red; display: none;">This field is required!</span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="Update" onclick="UpdateRole();">Update</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section script
    {
    <script src="~/js/ManageAccounts.js"></script>
}

@*<script>
    function showHiredStatus(role) {
        const status = document.getElementById("formHiring");
        const radioButtons = document.getElementsByName("hiredStatus");
        if(role=='admin'){
            
            status.style.display = "none";
            radioButtons.forEach((radio) => {
                radio.checked = false;
            });
        }else{
            status.style.display = "block";
        }
       
    }


    document.getElementById('createAccountForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Mencegah pengiriman formulir secara default
        debugger;
        // Mengambil nilai input dari formulir
        var accountId = "";
        var fullName = document.getElementById('fullName').value;
        //var nickName = document.getElementById('nickName').value;
        var email = document.getElementById('email').value;
        var password = document.getElementById('password').value;
        var repeatPassword = document.getElementById('repeatPassword').value;
        //var birthPlace = document.getElementById('birthPlace').value;
        //var birthDate = document.getElementById('birthDate').value;
        //var religion = document.getElementById('religion').value;
        var gender = document.querySelector('input[name="gender"]:checked').value;
        //var martialStatus = document.getElementById('martialStatus').value;
        var roleId = document.querySelector('input[name="roleId"]:checked').value;
        // ...
        // Melakukan validasi repeat password
        if (password !== repeatPassword) {
            // Password dan repeat password tidak sama, tampilkan pesan error
            alert('Password and Repeat Password do not match.');
            return; // Hentikan eksekusi lebih lanjut
        }

        var hiredStatusElement = document.querySelector('input[name="hiredStatus"]:checked');
        var hiredStatus = hiredStatusElement ? hiredStatusElement.value : null;

      

        // Menggabungkan data input menjadi objek yang akan dikirim ke API

        var data = {
            accountId: accountId,
            email: email,
            password: password,
            //nickname: 'string',
            fullname: fullName,
            //birthplace: 'string',
            //birthdate: '2023-06-23T07:21:40.243Z',
            //religion: 'string',
            gender: gender,
            //maritalstatus: 'string',
            //hiredstatus: 'string',
            //nationality: 'string',
            //phone: 'string',
            //address: 'string',
            //image: 'string',
            roleId: roleId,
            hiredstatus: hiredStatus,



        }

        // Mengirim data ke API menggunakan Fetch API
        fetch('https://localhost:7177/api/Accounts/Register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
            .then(function (response) {
                if (response.ok) {
                    // Redirect atau tampilkan pesan sukses jika permintaan berhasil
                    // ...
                    Swal.fire('Success', 'Registration Employee successful', 'success');
                    var form = document.getElementById('createAccountForm');
                    form.reset(); // Reset form setelah pengiriman berhasil

                } else {
                    // Tampilkan pesan error jika permintaan gagal
                    response.json().then(function (data) {
                        // Ambil pesan dari respons JSON
                        var errorMessage = data.message;

                        // Tampilkan pesan error menggunakan SweetAlert
                        Swal.fire('Error', errorMessage, 'error');
                    });

                }
            })
            .catch(function (error) {
                // Tangani error jika terjadi kesalahan saat mengirim permintaan
                // ...
            });
    });
</script>*@

