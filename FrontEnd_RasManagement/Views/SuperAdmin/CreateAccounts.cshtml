@{
    ViewData["Title"] = "CreateAccounts";
    Layout = "~/Views/Layout/LayoutSuperAdmin.cshtml";
}

<h5 style="font-family:comfortaa; color: black" class="font-weight-bold">Create Accounts</h5>

<div class="card mb-5 border-left-primary shadow">
    <div class="card-body">
        <form class="user" method="post" id="createAccountForm">
            <div class="form-group row ">
                <div class="col-sm-6 mb-3 mb-sm-0">
                    <label class="text-dark" for="exampleInputEmail1">Full Name</label>
                    <input type="text" class="form-control " id="fullName" name="fullName" required>
                </div>
                <div class="col-sm-6">
                    <label class="text-dark" for="exampleInputEmail1">Role</label>
                    <div class="form-check">
                        <input type="radio" class="form-check-input" id="admin" name="roleId" value="2" onclick="showHiredStatus('admin')" required>Admin
                        <label class="form-check-label" for="radio1"></label>
                    </div>
                    <div class="form-check">
                        <input type="radio" class="form-check-input" id="employee" name="roleId" value="3" onclick="showHiredStatus('employee')" required>Employee
                        <label class="form-check-label" for="radio2"></label>
                    </div>
                </div>
            </div>

            <div class="form-group row">

                <div class="col-sm-6 mb-3 mb-sm-0">
                    <label class="text-dark" for="exampleInputEmail1">Email</label>
                    <input type="email" class="form-control " id="email" name="email" required>
                    <span class="error-message" id="validateEmail" style="color: red; display: none;">The field must use the email domain @@berca.co.id.</span>
                </div>

                <div class="col-sm-6">
                    <label class="text-dark" for="exampleInputEmail1">Gender</label>
                    <div class="form-check">
                        <input type="radio" class="form-check-input" id="male" name="gender" value="Male" required>Male
                        <label class="form-check-label" for="radio1"></label>
                    </div>
                    <div class="form-check">
                        <input type="radio" class="form-check-input" id="radio2" name="gender" value="Female" required>Female
                        <label class="form-check-label" for="radio2"></label>
                    </div>
                </div>
            </div>

       

            <div class="form-group row" id="formHiring" style="display: none;">
                <div class="col-sm-6 mb-3 mb-sm-0">
                    <label class="text-dark" for="exampleInputEmail1">Status Hiring</label>
                    <div class="form-check">
                        <input type="radio" class="form-check-input" id="prohire" name="hiredStatus" value="Prohire">Prohire
                        <label class="form-check-label" for="radio1"></label>
                    </div>
                    <div class="form-check">
                        <input type="radio" class="form-check-input" id="bootcamp" name="hiredStatus" value="Bootcamp">Bootcamp
                        <label class="form-check-label" for="radio2"></label>
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-primary ">Submit</button>
        </form>



        @*<div class="form-group row">

        <div class="col-sm-6 mb-3 mb-sm-0">
        <label class="text-dark" for="exampleInputEmail1">AccountId</label>
        <input type="text" class="form-control " id="accountId" name="accountId">
        </div>

        <div class="col-sm-6">
        <label class="text-dark" for="exampleInputEmail1">Hired Status</label>
        <input type="text" class="form-control " id="hiredStatus" name="hiredStatus">
        </div>
        </div>
        <div class="form-group row">

        <div class="col-sm-6 mb-3 mb-sm-0">
        <label class="text-dark" for="exampleInputEmail1">Full Name</label>
        <input type="text" class="form-control " id="fullName" name="fullName">
        </div>

        <div class="col-sm-6">
        <label class="text-dark" for="exampleInputEmail1">Nickname</label>
        <input type="text" class="form-control " id="nickName" name="nickName">
        </div>
        </div>
        <div class="form-group row">

        <div class="col-sm-6 mb-3 mb-sm-0">
        <label class="text-dark" for="exampleInputEmail1">Email</label>
        <input type="email" class="form-control " id="email" name="email">
        </div>

        <div class="col-sm-6">
        <label class="text-dark" for="exampleInputEmail1">Religion</label>
        <input type="text" class="form-control " id="hiredStatus" name="religion">
        </div>
        </div>

        <div class="form-group row">
        <div class="col-sm-6 mb-3 mb-sm-0">
        <label class="text-dark"  for="exampleInputEmail1">Password</label>
        <input type="password" class="form-control"
        id="password" name="password">
        </div>
        <div class="col-sm-6">
        <label class="text-dark" for="exampleInputEmail1"> Repeat Password</label>
        <input type="password" class="form-control "
        id="repeatPassword" name="repeatPassword">
        </div>
        </div>
        <div class="form-group row">
        <div class="col-sm-6 mb-3 mb-sm-0">
        <label class="text-dark"  for="exampleInputEmail1">Gender</label>
        <div class="form-check">
        <input type="radio" class="form-check-input" id="male" name="gender" value="Male" checked>Male
        <label class="form-check-label" for="radio1"></label>
        </div>
        <div class="form-check">
        <input type="radio" class="form-check-input" id="radio2" name="gender" value="Female">Female
        <label class="form-check-label" for="radio2"></label>
        </div>
        </div>
        <div class="col-sm-6">
        <label class="text-dark" for="exampleInputEmail1"> Nationality</label>
        <input type="text" class="form-control "
        id="nationality" name="nationality">
        </div>
        </div>
        <div class="form-group row">
        <div class="col-sm-6 mb-3 mb-sm-0">
        <label class="text-dark" for="exampleInputEmail1">Birth Place</label>

        <input type="text" class="form-control "
        id="birthPlace" name="birthPlace">

        </div>
        <div class="col-sm-6">
        <label class="text-dark" for="exampleInputEmail1"> Birth Date</label>
        <input type="date" class="form-control "
        id="birthDate" name="birthDate">
        </div>
        <div class="col-sm-6">

        <input type="hidden"  class="form-control " id="roleId" name="roleId" value="3">
        </div>

        </div>
        <div class="form-group">
        <label class="text-dark" for="exampleInputEmail1">Address</label>
        <input type="text" class="form-control" id="address" name="address">
        </div>*@




    </div>
</div>


<script>
    function showHiredStatus(role) {
        const status = document.getElementById("formHiring");
        const radioButtons = document.getElementsByName("hiredStatus");
        if(role=='admin'){
            
            status.style.display = "none";
            radioButtons.forEach((radio) => {
                radio.checked = false;
            });
        }else{
            status.style.display = "block";
        }
       
    }


    document.getElementById('createAccountForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Mencegah pengiriman formulir secara default
        debugger;
        // Mengambil nilai input dari formulir
        var accountId = "";
        var fullName = document.getElementById('fullName').value;
        //var nickName = document.getElementById('nickName').value;
        var email = document.getElementById('email').value;
        //var password = document.getElementById('password').value;
        //var repeatPassword = document.getElementById('repeatPassword').value;
        //var birthPlace = document.getElementById('birthPlace').value;
        //var birthDate = document.getElementById('birthDate').value;
        //var religion = document.getElementById('religion').value;
        var gender = document.querySelector('input[name="gender"]:checked').value;
        //var martialStatus = document.getElementById('martialStatus').value;
        var roleId = document.querySelector('input[name="roleId"]:checked').value;
        // ...
        // Melakukan validasi repeat password
        //if (password !== repeatPassword) {
        //    // Password dan repeat password tidak sama, tampilkan pesan error
        //    alert('Password and Repeat Password do not match.');
        //    return; // Hentikan eksekusi lebih lanjut
        //}
           //validasi email
        if (validateEmail(email)) {
            $('#validateEmail').hide();
        } else {
           $('#validateEmail').show();
           return;
        }
        const password = uuidv4();

        var hiredStatusElement = document.querySelector('input[name="hiredStatus"]:checked');
        var hiredStatus = hiredStatusElement ? hiredStatusElement.value : null;

      

        // Menggabungkan data input menjadi objek yang akan dikirim ke API

        var data = {
            accountId: accountId,
            email: email,
            password: password,
            //nickname: 'string',
            fullname: fullName,
            //birthplace: 'string',
            //birthdate: '2023-06-23T07:21:40.243Z',
            //religion: 'string',
            gender: gender,
            //maritalstatus: 'string',
            //hiredstatus: 'string',
            //nationality: 'string',
            //phone: 'string',
            //address: 'string',
            //image: 'string',
            roleId: roleId,
            hiredstatus: hiredStatus,



        }

        // Mengirim data ke API menggunakan Fetch API
        fetch('https://localhost:7177/api/Accounts/Register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
            .then(function (response) {
                if (response.ok) {
                    // Redirect atau tampilkan pesan sukses jika permintaan berhasil
                    // ...
                    Swal.fire('Success', 'Registration Employee successful', 'success');
                    var form = document.getElementById('createAccountForm');
                    form.reset(); // Reset form setelah pengiriman berhasil

                    $.post("/Accounts/NewAccount", { email, password })
                        .done(function () {
                            const Toast = Swal.mixin({
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 2000,
                                timerProgressBar: true,
                                didOpen: (toast) => {
                                    toast.addEventListener('mouseenter', Swal.stopTimer)
                                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                                }
                            })



                            Toast.fire({
                                icon: 'success',
                                title: 'Email Has ben sent',
                                text: "",

                            })

                        });

                } else {
                    // Tampilkan pesan error jika permintaan gagal
                    response.json().then(function (data) {
                        // Ambil pesan dari respons JSON
                        var errorMessage = data.message;

                        // Tampilkan pesan error menggunakan SweetAlert
                        Swal.fire('Error', errorMessage, 'error');
                    });

                }
            })
            .catch(function (error) {
                // Tangani error jika terjadi kesalahan saat mengirim permintaan
                // ...
            });
    });
    function uuidv4() {
        return 'xxxxxxxx'
            .replace(/[x]/g, function (c) {
                const r = Math.random() * 16 | 0,
                    v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
    }

    function validateEmail(email) {
        // Regular expression untuk memeriksa email dengan domain berca.co.id
        const regex = /^[a-zA-Z0-9._-]+@@berca\.co\.id$/;
        return regex.test(email);
    }
</script>


